import {
  LogLevelOccurrences,
  RawLogLevel,
} from "../../redux/logStream/logStream.types"

const logLevelOccurrencesTest: LogLevelOccurrences = {
  0: {
    lastLog: 2,
    levels: {
      INFO: 2,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  1: {
    lastLog: 6,
    levels: {
      INFO: 3,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  2: {
    lastLog: 10,
    levels: {
      INFO: 3,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  3: {
    lastLog: 14,
    levels: {
      INFO: 3,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
}

const logLevelChartTest: RawLogLevel[] = [
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 0,
    levels: {
      INFO: 0,
      SUCCESS: 0,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 2,
    levels: {
      INFO: 2,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 6,
    levels: {
      INFO: 3,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 10,
    levels: {
      INFO: 3,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
  {
    lastLog: 14,
    levels: {
      INFO: 3,
      SUCCESS: 1,
      WARNING: 0,
      ERROR: 0,
      CRITICAL: 0,
      DEBUG: 0,
    },
  },
]

export const getLogLevelChartsData = {
  numSecondsTest: 60,
  MAX_CHART_TICKS_TEST: 60,
  logLevelOccurrencesTest,
  currentDateTest: new Date(4000),
  logLevelChartTest,
}

export const parsedYamlObject = {
  data: {
    pods: [
      {
        name: "segmenter",
        read_only: true,
        uses: "pods/segment.yml",
      },
      {
        name: "encoder",
        polling: "any",
        read_only: true,
        timeout_ready: 600000,
        uses: "pods/encode.yml",
      },
      {
        name: "chunk_idx",
        polling: "any",
        uses: "pods/chunk.yml",
      },
      {
        name: "doc_idx",
        needs: "gateway",
        polling: "any",
        uses: "pods/doc.yml",
      },
      { name: "join_all", needs: ["doc_idx", "chunk_idx"], uses: "_merge" },
    ],
    version: "1",
  },
}
